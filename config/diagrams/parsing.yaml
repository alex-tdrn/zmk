parse_config:
  preprocess: true
  skip_binding_parsing: false
  mark_alternate_layer_activators: true
  raw_binding_map:
    '&kp A': {t: 'a', s: 'A'}
    '&kp B': {t: 'b', s: 'B'}
    '&kp C': {t: 'c', s: 'C'}
    '&kp D': {t: 'd', s: 'D'}
    '&kp E': {t: 'e', s: 'E'}
    '&kp F': {t: 'f', s: 'F'}
    '&kp G': {t: 'g', s: 'G'}
    '&kp H': {t: 'h', s: 'H'}
    '&kp I': {t: 'i', s: 'I'}
    '&kp J': {t: 'j', s: 'J'}
    '&kp K': {t: 'k', s: 'K'}
    '&kp L': {t: 'l', s: 'L'}
    '&kp M': {t: 'm', s: 'M'}
    '&kp N': {t: 'n', s: 'N'}
    '&kp O': {t: 'o', s: 'O'}
    '&kp P': {t: 'p', s: 'P'}
    '&kp Q': {t: 'q', s: 'Q'}
    '&kp R': {t: 'r', s: 'R'}
    '&kp S': {t: 's', s: 'S'}
    '&kp T': {t: 't', s: 'T'}
    '&kp U': {t: 'u', s: 'U'}
    '&kp V': {t: 'v', s: 'V'}
    '&kp W': {t: 'w', s: 'W'}
    '&kp X': {t: 'x', s: 'X'}
    '&kp Y': {t: 'y', s: 'Y'}
    '&kp Z': {t: 'z', s: 'Z'}
    '&ext_power EP_OFF': 󰌭
    '&ext_power EP_ON ': 󰌬
    '&out OUT_USB': 󰌌󰕓
    '&out OUT_BLE': 󰌌󰂯
    '&bt BT_CLR': 󰂲
    '&bt BT_SEL 0': 󰂯1
    '&bt BT_SEL 1': 󰂯2
    '&bt BT_SEL 2': 󰂯3
    '&bt BT_SEL 3': 󰂯4
    '&bt BT_SEL 4': 󰂯5
    '&period_comma': {t: '.', s: ',', h: '.󰘶'}
    '&question_percent': {t: '?', s: '%', h: '?󰘶'}
    '&exclamation_at': {t: '!', s: '@', h: '!󰘶'}
  zmk_combos:
    combo_vertical_0:
      type: 'vertical_combo'
    combo_vertical_1:
      type: 'vertical_combo'
    combo_vertical_2:
      type: 'vertical_combo'
    combo_vertical_3:
      type: 'vertical_combo'
    combo_vertical_4:
      type: 'vertical_combo'
    combo_vertical_5:
      type: 'vertical_combo'
    combo_vertical_6:
      type: 'vertical_combo'
    combo_vertical_7:
      type: 'vertical_combo'
    combo_vertical_8:
      type: 'vertical_combo'
    combo_vertical_9:
      type: 'vertical_combo'
    combo_up:
      type: 'vertical_combo'
    combo_down:
      type: 'vertical_combo'
    combo_left:
      type: 'vertical_combo'
    combo_right:
      type: 'vertical_combo'
    combo_page_up:
      type: 'vertical_combo'
      key:
        tap: "PgUp"
    combo_page_down:
      type: 'vertical_combo'
      key:
        tap: "PgDn"
    combo_home:
      type: 'vertical_combo'
    combo_end:
      type: 'vertical_combo'
    combo_qu:
      key:
        tap: qu
        shifted: Qu
    combo_sharp_s:
      key:
        tap: ẞ
      draw_separate: true
    combo_th:
      key:
        tap: th
        shifted: Th
    combo_ch:
      key:
        tap: ch
        shifted: Ch
    combo_sh:
      key:
        tap: sh
        shifted: Sh
    combo_wh:
      key:
        tap: wh
        shifted: Wh
    combo_gh:
      key:
        tap: gh
        shifted: Gh
    combo_ph:
      key:
        tap: ph
        shifted: Ph
    combo_caps_word:
      key:
        tap: 󰘶
      align: bottom
      offset: 0.04
      arc_scale: 0.97
    combo_round_brackets:
      key:
        tap: ')'
        shifted: '('
        hold: '(⌶)'
    combo_square_brackets:
      key:
        tap: ']'
        shifted: '['
        hold: '[⌶]'
    combo_curly_brackets:
      key:
        tap: '}'
        shifted: '{'
        hold: '{⌶}'
    combo_angled_brackets:
      key:
        tap: '>'
        shifted: '<'
        hold: '<⌶>'
    combo_backtick_caret:
      key:
        tap: '`'
        shifted: '^'
        hold: '`⌶`'
    combo_double_quotes_hash:
      key:
        tap: '"'
        shifted: '#'
        hold: '"⌶"'
    combo_single_quote_dollar:
      key:
        tap: ''''
        shifted: '$'
        hold: '''⌶'''
    combo_newline:
      key:
        tap: 󱞤
        shifted: 󱞾
    combo_join_with_line:
      key:
        tap: 󱞤
        shifted: 󱞾
    combo_delete_word_or_line:
      key:
        shifted: 󰹾󰁮
        tap: 󰹾󰁮
    combo_diacritic_umlaut:
      draw_separate: true
      key:
        tap: ◌̈
    combo_diacritic_breve:
      draw_separate: true
      key:
        tap: ◌̆
    combo_diacritic_circumflex:
      draw_separate: true
      key:
        tap: ◌̂
    combo_diacritic_comma:
      draw_separate: true
      key:
        tap: ◌̦
    combo_oneshot_fn_layer:
      type: layer_switch
      key: FN
      align: top
      offset: 0.2
      slide: -0.6
    combo_lock:
      type: layer_switch
      align: top
      offset: 0.7
    combo_unlock:
      type: layer_switch
      align: top
      offset: 0.7
  sticky_label: ''
  toggle_label: ''
  trans_legend:
    t: ▽
    type: trans
  zmk_keycode_map:
    # For true 'bold', prefer JetBrainsMono natively supported glyphs: https://www.jetbrains.com/lp/mono/
    EXCLAMATION: '!'
    EXCL: '!'
    AT_SIGN: '@'
    AT: '@'
    HASH: '#'
    POUND: '#'
    DOLLAR: $
    DLLR: $
    PERCENT: '%'
    PRCNT: '%'
    CARET: ^
    AMPERSAND: '&'
    AMPS: '&'
    ASTERISK: '*'
    ASTRK: '*'
    STAR: '*'
    LEFT_PARENTHESIS: (
    LPAR: (
    RIGHT_PARENTHESIS: )
    RPAR: )
    EQUAL: '='
    PLUS: +
    MINUS: '-'
    UNDERSCORE: _
    UNDER: _
    SLASH: /
    FSLH: /
    QUESTION: '?'
    QMARK: '?'
    BACKSLASH: \
    BSLH: \
    PIPE: '|'
    NON_US_BACKSLASH: \
    PIPE2: '|'
    NON_US_BSLH: '|'
    SEMICOLON: ;
    SEMI: ;
    COLON: ':'
    SINGLE_QUOTE: ''''
    SQT: ''''
    APOSTROPHE: <
    APOS: .
    DOUBLE_QUOTES: '"'
    DQT: '"'
    COMMA: ','
    LESS_THAN: <
    LT: <
    PERIOD: .
    DOT: .
    GREATER_THAN: '>'
    GT: '>'
    LEFT_BRACKET: '['
    LBKT: '['
    LEFT_BRACE: '{'
    LBRC: '{'
    RIGHT_BRACKET: ']'
    RBKT: ']'
    RIGHT_BRACE: '}'
    RBRC: '}'
    GRAVE: '`'
    TILDE: '~'
    NON_US_HASH: '#'
    NUHS: '#'
    TILDE2: '~'
    DELETE: 󰹾
    BACKSPACE: 󰁮
    RET: 󱞦
    SPACE: '󱁐'
    TAB: 'Tab'
    LSHIFT: 󰘶
    RSHIFT: 󰘶
    LALT: 󰘵
    RALT: 󰘵
    LCTRL: 󰘴
    RCTRL: 󰘴
    LMETA: 󰘳
    RMETA: 󰘳
    ESC: 'Esc'
    UP: 
    DOWN: 
    LEFT: 
    RIGHT: 
    PAGE_DOWN: 'Page Down'
    PAGE_UP: 'Page Up'
    HOME: 'Home'
    END: 'End'

